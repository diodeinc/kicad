"""MIC2178-3.3 - 2.5A Synchronous Buck Regulator, 3.3V Fixed Output

The MIC2178-3.3 is a 200kHz synchronous buck (step-down) switching regulator 
designed for high-efficiency, battery-powered applications. It operates from 
4.5V to 16.5V input and features internal power MOSFETs that can supply up to 
2.5A output current with efficiency up to 96%. The device automatically switches 
between PWM mode for heavy loads and skip mode for light loads to optimize 
efficiency across the full load range. It includes current-mode control, 
pulse-by-pulse current limiting, thermal shutdown, and undervoltage lockout.

Author: @Anthropic/claude-4-opus-20250514
Reviewer: Nasheed Ur Rehman
Datasheet: https://ww1.microchip.com/downloads/en/DeviceDoc/mic2178.pdf
"""

# Dependencies
Resistor = Module("@stdlib/generics/Resistor.zen")
Capacitor = Module("@stdlib/generics/Capacitor.zen")
Inductor = Module("@stdlib/generics/Inductor.zen")
Diode = Module("@stdlib/generics/Diode.zen")

# Types
InductorValue = enum("47uH", "50uH", "68uH", "100uH", "150uH")
OperationMode = enum("Auto", "PWMOnly")

# Configuration
add_input_cap = config("add_input_cap", bool, default = True)
add_output_cap = config("add_output_cap", bool, default = True)
add_inductor = config("add_inductor", bool, default = True)
add_catch_diode = config("add_catch_diode", bool, default = True)
add_compensation = config("add_compensation", bool, default = True)
enable_control = config("enable_control", bool, default = True)
operation_mode = config("operation_mode", OperationMode, default = "PWMOnly")
inductor_value = config("inductor_value", InductorValue, default = "50uH")
add_sync_pulldown = config("add_sync_pulldown", bool, default = True)

# External IO
VIN = io("VIN", Net, default = Net("VIN"))
VOUT = io("VOUT", Net, default = Net("VOUT"))
EN_CTRL = io("EN", Net, default = Net("EN")) if enable_control else VIN
SYNC_IN = io("SYNC", Net, default = Net("SYNC"))
PWM_STATUS = io("PWM", Net, default = Net("PWM"))
PWRGD = io("PWRGD", Net, default = Net("PWRGD"))
GND = io("GND", Net, default = Net("GND", symbol = Symbol("@kicad-symbols/power.kicad_sym:GND")))

# Internal nets
_SW = Net("SW")
_COMP = Net("COMP")
_BIAS = Net("BIAS")
_PWM = GND if operation_mode == OperationMode("PWMOnly") else PWM_STATUS
_FB = VOUT  # For fixed 3.3V version, FB connects directly to output

# 2.5A Synchronous Buck Regulator, 4.5-16.5V Input Voltage, 3.3V Fixed Output Voltage, SO-20W
Component(
    name = "MIC2178-3.3",
    symbol = Symbol(library = "@kicad-symbols/Regulator_Switching.kicad_sym", name = "MIC2178-3.3"),
    footprint = File("@kicad-footprints/Package_SO.pretty/SOIC-20W_7.5x12.8mm_P1.27mm.kicad_mod"),
    pins = {
        "VIN": VIN,
        "EN": EN_CTRL,
        "SYNC": SYNC_IN,
        "~{PWM}": _PWM,
        "COMP": _COMP,
        "BIAS": _BIAS,
        "SGND": GND,
        "PGND": GND,
        "SW": _SW,
        "FB": _FB,
        "PWRGD": PWRGD
    },
)

# Input Capacitor - Datasheet recommends low ESR electrolytic or tantalum
if add_input_cap:
    # Main input capacitor
    Capacitor(name = "C_IN", value = "100uF", package = "1210", P1 = VIN, P2 = GND)
    
    # High-frequency ceramic bypass
    Capacitor(name = "C_IN_HF", value = "100nF", package = "0603", P1 = VIN, P2 = GND)

# Output Inductor - Required for buck converter operation
if add_inductor:
    Inductor(name = "L_OUT", value = inductor_value.value, package = "1210", P1 = _SW, P2 = VOUT)

# Catch Diode - Schottky diode for inductor current path
if add_catch_diode:
    # 2A Schottky diode with low forward voltage
    Diode(
        name = "D_CATCH",
        variant = "Schottky",
        package = "SMB",
        mpn = "MBRS130L",
        v_r = "30V",
        i_f = "2A",
        K = _SW,
        A = GND,
    )

# Output Capacitor - Low ESR for minimal ripple
if add_output_cap:
    # Main output capacitor (low ESR tantalum or electrolytic)
    Capacitor(name = "C_OUT", value = "220uF", package = "1210", P1 = VOUT, P2 = GND)
    
    # Additional ceramic for high frequency
    Capacitor(name = "C_OUT_HF", value = "100nF", package = "0603", P1 = VOUT, P2 = GND)

# Compensation Network - RC network on COMP pin
if add_compensation:
    # Series RC compensation
    Resistor(name = "R_COMP", value = "10kohms", package = "0402", P1 = _COMP, P2 = Net("COMP_C"))
    Capacitor(name = "C_COMP", value = "6.8nF", package = "0402", P1 = Net("COMP_C"), P2 = GND)

# BIAS Pin Bypass Capacitor & Resistor - Required per datasheet
Capacitor(name = "C_BIAS", value = "10nF", package = "0402", P1 = _BIAS, P2 = GND)
Resistor(name = "R_BIAS", value = "10kohms", package = "0402", P1 = _BIAS, P2 = GND)

# AUTO Pin Timing Capacitor - For automatic mode switching
if operation_mode == OperationMode("Auto"):
    Capacitor(name = "C_AUTO", value = "2.2nF", package = "0402", P1 = _PWM, P2 = GND)

# Enable Control
if enable_control:
    # Pull-up resistor to ensure regulator is enabled by default
    Resistor(name = "R_EN", value = "100kohms", package = "0402", P1 = EN_CTRL, P2 = VIN)

# SYNC Pin Pull-down - Connect to ground if not using external sync
if add_sync_pulldown:
    Resistor(name = "R_SYNC", value = "10kohms", package = "0402", P1 = SYNC_IN, P2 = GND)

# Power Good Pull-up
Resistor(name = "R_PWRGD", value = "20kohms", package = "0402", P1 = PWRGD, P2 = VOUT)

# pcb:sch MIC2178-3.3 x=341.9000 y=202.2000 rot=0
# pcb:sch C_IN.C x=-97.5200 y=227.6000 rot=0
# pcb:sch C_IN_HF.C x=-8.6200 y=227.6000 rot=0
# pcb:sch L_OUT.L x=668.9381 y=151.4000 rot=270
# pcb:sch D_CATCH.D x=545.1000 y=392.7000 rot=90
# pcb:sch C_OUT.C x=880.3800 y=329.2000 rot=0
# pcb:sch C_OUT_HF.C x=804.1800 y=329.2000 rot=0
# pcb:sch R_COMP.R x=192.0400 y=316.5000 rot=90
# pcb:sch C_COMP.C x=67.5800 y=380.0000 rot=0
# pcb:sch C_BIAS.C x=283.4800 y=392.7000 rot=0
# pcb:sch C_AUTO.C x=228.6000 y=406.4000 rot=0
# pcb:sch R_EN.R x=192.0400 y=214.9000 rot=90
# pcb:sch R_SYNC.R x=192.0400 y=240.3000 rot=90
# pcb:sch R_PWRGD.R x=763.5400 y=227.6000 rot=180
# pcb:sch GND.1 x=443.5000 y=557.8000 rot=0
# pcb:sch R_BIAS.R x=230.1400 y=405.4000 rot=0