"""DW01A - Battery Protection IC for Single-Cell Li-Ion/Li-Polymer Batteries

The DW01A is a battery protection IC designed to safeguard single-cell lithium-ion 
and lithium-polymer batteries against overcharge, overdischarge, and overcurrent 
conditions. It features precision overcharge protection at 4.3V ±50mV, ultra-low 
quiescent current of 3μA, and requires no external capacitors for delay timing. 
The device integrates seamlessly into battery packs with minimal external components 
and comes in a miniature SOT-23-6 package.

Key features:
- Overcharge protection: 4.3V ±50mV
- Overdischarge protection: 2.4V ±100mV  
- Dual-level overcurrent protection
- Ultra-low quiescent current: 3μA @ 3.6V
- Built-in delay timing circuits
- 0V battery charging function
- Auto-recovery from protection states

Author: @anthropic/claude-opus-4
Reviewer: Nasheed Ur Rehman
Datasheet: https://www.ic-fortune.com/upload/Download/DW01A-DS-17_EN.pdf
"""

# Dependencies
Resistor = Module("@stdlib/generics/Resistor.zen")
Capacitor = Module("@stdlib/generics/Capacitor.zen")
Mosfet = Module("@stdlib/generics/Mosfet.zen")

# Configuration
# Protection options
add_cs_filter = config("add_cs_filter", bool, default = True)  # Add filter cap on CS pin
add_test_points = config("add_test_points", bool, default = True)  # Add test points for debugging

# Decoupling and stabilization capacitors
add_vdd_decoupling = config("add_vdd_decoupling", bool, default = True)  # Add 1µF decoupling cap on VDD
add_output_stabilization = config("add_output_stabilization", bool, default = True)  # Add 10µF stabilization cap on output

# MOSFET selection (common N-channel MOSFETs for battery protection)
mosfet_mpn = config("mosfet_mpn", str, default = "SI2302CDS")  # Default: Vishay SI2302CDS (20V, 3.9A, 85mΩ)

# External IO - Battery connections
BATT_PLUS = io("BATT+", Net, default = Net("BATT+", symbol = Symbol("@kicad-symbols/power.kicad_sym:VDD")))   # Battery positive terminal
BATT_MINUS = io("BATT-", Net, default = Net("BATT-", symbol = Symbol("@kicad-symbols/power.kicad_sym:GND")))  # Battery negative terminal
BATT_INT = Net("BATT-INT")

# Internal nets
_VCC = Net("VCC")
_GND = Net("GND") 
_CS = Net("CS")
_OD = Net("OD")
_OC = Net("OC")
_TD = Net("TD")


# DW01A Battery Protection IC
Component(
    name = "U1",
    symbol = Symbol(library = "@kicad-symbols/Battery_Management.kicad_sym", name = "DW01A"),
    footprint = File("@kicad-footprints/Package_TO_SOT_SMD.pretty/SOT-23-6.kicad_mod"),
    pins = {
        "VCC": _VCC,
        "GND": _GND,
        "OD": _OD,
        "OC": _OC,
        "CS": _CS,
        "TD": _TD
    },
)

# R1: 100Ω resistor from BATT+ to VCC
Resistor(
    name = "R1",
    value = "100ohms",
    package = "0603",
    P1 = BATT_PLUS,
    P2 = _VCC
)

# R2: 1kΩ resistor from CS to BATT-
Resistor(
    name = "R2",
    value = "1kohms",
    package = "0603",
    P1 = _CS,
    P2 = BATT_MINUS
)

# C1: 100nF capacitor between VCC and GND
Capacitor(
    name = "C1",
    value = "100nF",
    package = "0603",
    P1 = _VCC,
    P2 = _GND
)

# Discharge control MOSFET (M1)
# Controls battery discharge path
Mosfet(
    name = "M1",
    channel = "N",
    package = "SOT-23-3",
    mpn = mosfet_mpn,
    G = _OD,
    D = BATT_INT,      # Drain to common connection point
    S = _GND   # Source to battery negative
)

# Charge control MOSFET (M2)
# Controls battery charge path
Mosfet(
    name = "M2", 
    channel = "N",
    package = "SOT-23-3",
    mpn = mosfet_mpn,
    G = _OC,
    D = BATT_INT,      # Drain to common connection point
    S = BATT_MINUS   # Source to pack negative output
)

# Optional VDD decoupling capacitor (1µF ceramic)
# Provides additional high-frequency decoupling for VDD pin
if add_vdd_decoupling:
    Capacitor(
        name = "C3",
        value = "1uF",
        package = "0603",
        dielectric = "X7R",
        voltage = "16V",
        P1 = _VCC,  # VDD pin of DW01A
        P2 = _GND   # VSS pin of DW01A
    )

# Optional output stabilization capacitor (10µF electrolytic)
# Stabilizes the output voltage and reduces ripple
if add_output_stabilization:
    Capacitor(
        name = "C4",
        value = "10uF",
        package = "1206",
        P1 = BATT_INT,  # OUT pin (common MOSFET connection)
        P2 = _GND       # GND
    )

# Optional CS pin filter capacitor (helps with noise immunity)
if add_cs_filter:
    Capacitor(
        name = "C2", 
        value = "100nF",
        package = "0402",
        P1 = _CS,
        P2 = BATT_MINUS  # Connected to BATT- for proper filtering
    )

# Optional test points for debugging
if add_test_points:
    TestPoint = Module("@stdlib/generics/TestPoint.zen")
    TestPoint(name = "TP_VCC", variant = "THTPad_D1.0mm_Drill0.5mm", P1 = _VCC)
    TestPoint(name = "TP_CS", variant = "THTPad_D1.0mm_Drill0.5mm", P1 = _CS)
    TestPoint(name = "TP_OD", variant = "THTPad_D1.0mm_Drill0.5mm", P1 = _OD)
    TestPoint(name = "TP_OC", variant = "THTPad_D1.0mm_Drill0.5mm", P1 = _OC)
    TestPoint(name = "TP_GND", variant = "THTPad_D1.0mm_Drill0.5mm", P1 = _GND)


# pcb:sch C1.C x=512.0800 y=202.2000 rot=0
# pcb:sch R1.R x=446.0400 y=49.8000 rot=0
# pcb:sch R2.R x=928.6400 y=202.2000 rot=0
# pcb:sch U1 x=659.4000 y=113.3000 rot=0
# pcb:sch M1.M x=646.7000 y=265.7000 rot=90
# pcb:sch M2.M x=811.8000 y=316.5000 rot=270
# pcb:sch BATT+.1 x=448.5800 y=-89.9000 rot=0
# pcb:sch BATT-.1 x=926.1000 y=418.1000 rot=0
# pcb:sch C2.C x=1007.3800 y=202.2000 rot=0
# pcb:sch C3.C x=359.6800 y=202.2000 rot=0
# pcb:sch C4.C x=677.1800 y=430.8000 rot=90
# pcb:sch TP_VCC.TP x=524.7800 y=85.3600 rot=0
# pcb:sch TP_CS.TP x=1020.0800 y=85.3600 rot=0
# pcb:sch TP_OD.TP x=766.0800 y=453.6600 rot=180
# pcb:sch TP_OC.TP x=854.9800 y=453.6600 rot=180
# pcb:sch D1 x=265.7000 y=545.1000 rot=90
# pcb:sch D2.D x=380.0000 y=291.1000 rot=0
# pcb:sch D3.D x=507.0000 y=799.1000 rot=0
# pcb:sch TP_GND.TP x=524.7800 y=377.4600 rot=180