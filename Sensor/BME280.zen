"""BME280 - Combined humidity, pressure and temperature sensor with I²C/SPI interface

The BME280 is a combined digital humidity, pressure and temperature sensor in an extremely 
compact 2.5×2.5×0.93mm³ metal-lid LGA package. It features high accuracy sensing with 
±3% RH humidity, ±1.0 hPa pressure, and ±0.5°C temperature accuracy. The sensor supports 
both I²C (up to 3.4 MHz) and SPI (up to 10 MHz) interfaces and operates from 1.71V to 
3.6V supply with ultra-low power consumption down to 0.1μA in sleep mode.

Key features:
- Humidity sensing: 0-100% RH, ±3% accuracy, 1s response time
- Pressure sensing: 300-1100 hPa, ±1.0 hPa accuracy, 0.18 Pa resolution
- Temperature sensing: -40 to +85°C, ±0.5°C accuracy
- Digital interfaces: I²C (up to 3.4 MHz) and SPI (3/4-wire, up to 10 MHz)
- Ultra-low power: 1.8μA @ 1Hz humidity/temperature, 3.6μA for all three
- Built-in IIR filter for pressure/temperature noise reduction

Author: @@anthropic/claude-opus-4
Reviewer: Nasheed Ur Rehman
Datasheet: https://www.bosch-sensortec.com/media/boschsensortec/downloads/datasheets/bst-bme280-ds002.pdf
"""

load("@stdlib/interfaces.zen", "I2c", "Spi", "Power")

# Dependencies
Resistor = Module("@stdlib/generics/Resistor.zen")
Capacitor = Module("@stdlib/generics/Capacitor.zen")
TestPoint = Module("@stdlib/generics/TestPoint.zen")

# Configuration Types
InterfaceMode = enum("I2C", "SPI_4Wire", "SPI_3Wire")
I2cAddress = enum("0x76", "0x77")
PowerMode = enum("UltraLowPower", "Standard", "HighPerformance")

# Configuration
interface_mode = config("interface_mode", InterfaceMode, default = "I2C")
if interface_mode == InterfaceMode("I2C"):
    i2c_address = config("i2c_address", I2cAddress, default = "0x76")
    add_i2c_pullups = config("add_i2c_pullups", bool, default = True)
    i2c_pullup_value = config("i2c_pullup_value", str, default = "4.7kohms")

power_mode = config("power_mode", PowerMode, default = "Standard")
add_vddio_separation = config("add_vddio_separation", bool, default = False)
add_power_decoupling = config("add_power_decoupling", bool, default = True)
add_test_points = config("add_test_points", bool, default = False)

# External IO
VDD = io("VDD", Power)
GND = io("GND", Net, default = Net("GND", symbol = Symbol("@kicad-symbols/power.kicad_sym:GND")))

# VDDIO - can be same as VDD or separate
if add_vddio_separation:
    VDDIO = io("VDDIO", Power)
else:
    VDDIO = VDD

# Interface IO based on configuration
if interface_mode == InterfaceMode("I2C"):
    i2c = io("I2C", I2c)
elif interface_mode == InterfaceMode("SPI_4Wire") or interface_mode == InterfaceMode("SPI_3Wire"):
    spi = io("SPI", Spi)

# Internal nets - assigned based on interface mode
if interface_mode == InterfaceMode("I2C"):
    # I2C Mode Configuration
    _SCK = i2c.SCL
    _SDI = i2c.SDA  # SDI is bidirectional SDA in I2C mode
    _SDO = GND if i2c_address == I2cAddress("0x76") else VDDIO.NET  # I2C address selection
    _CSB = VDDIO.NET  # CSB must be tied to VDDIO for I2C mode
elif interface_mode == InterfaceMode("SPI_4Wire"):
    # 4-Wire SPI Mode Configuration
    _SCK = spi.CLK
    _SDI = spi.MOSI
    _SDO = spi.MISO
    _CSB = spi.CS
elif interface_mode == InterfaceMode("SPI_3Wire"):
    # 3-Wire SPI Mode Configuration
    # Note: In 3-wire mode, SDI and SDO share the same line
    # External logic or careful software control is required
    _SCK = spi.CLK
    _SDI = spi.MOSI
    _SDO = spi.MOSI  # Same line for 3-wire mode (bidirectional)
    _CSB = spi.CS

# Main BME280 Component
Component(
    name = "BME280",
    symbol = Symbol(library = "@kicad-symbols/Sensor.kicad_sym", name = "BME280"),
    footprint = File("@kicad-footprints/Package_LGA.pretty/Bosch_LGA-8_2.5x2.5mm_P0.65mm_ClockwisePinNumbering.kicad_mod"),
    pins = {
        "VDD": VDD.NET,
        "VDDIO": VDDIO.NET,
        "GND": GND,
        "SCK": _SCK,
        "SDI": _SDI,
        "SDO": _SDO,
        "CSB": _CSB
    }
)

# I2C pull-up resistors (required for I2C operation)
if interface_mode == InterfaceMode("I2C") and add_i2c_pullups:
    Resistor(name = "R_SCL", value = i2c_pullup_value, package = "0402", P1 = i2c.SCL, P2 = VDDIO.NET)
    Resistor(name = "R_SDA", value = i2c_pullup_value, package = "0402", P1 = i2c.SDA, P2 = VDDIO.NET)

# Power Supply Decoupling
if add_power_decoupling:
    # VDD decoupling - place close to pin 8
    Capacitor(name = "C_VDD", value = "100nF", package = "0402", P1 = VDD.NET, P2 = GND)
    
    # VDDIO decoupling - place close to pin 6
    if add_vddio_separation:
        Capacitor(name = "C_VDDIO", value = "100nF", package = "0402", P1 = VDDIO.NET, P2 = GND)
    
    # Additional bulk capacitor for better power supply filtering
    if power_mode == PowerMode("HighPerformance"):
        Capacitor(name = "C_BULK", value = "10uF", package = "0603", P1 = VDD.NET, P2 = GND)


# Test Points (optional)
if add_test_points:
    if interface_mode == InterfaceMode("I2C"):
        TestPoint(name = "TP_SCL", variant = "THTPad_D1.0mm_Drill0.5mm", P1 = i2c.SCL)
        TestPoint(name = "TP_SDA", variant = "THTPad_D1.0mm_Drill0.5mm", P1 = i2c.SDA)
    else:
        TestPoint(name = "TP_SCK", variant = "THTPad_D1.0mm_Drill0.5mm", P1 = _SCK)
        TestPoint(name = "TP_SDI", variant = "THTPad_D1.0mm_Drill0.5mm", P1 = _SDI)
        TestPoint(name = "TP_SDO", variant = "THTPad_D1.0mm_Drill0.5mm", P1 = _SDO)
        TestPoint(name = "TP_CSB", variant = "THTPad_D1.0mm_Drill0.5mm", P1 = _CSB)

# Layout recommendations comments
# pcb:note Place C_VDD as close as possible to VDD pin (pin 8)
# pcb:note Place C_VDDIO as close as possible to VDDIO pin (pin 6) if using separate VDDIO
# pcb:note Keep digital interface traces short and away from switching power supplies
# pcb:note The metal lid is internally connected to GND - ensure proper PCB grounding
# pcb:note Avoid placing heat sources near the sensor for accurate temperature measurement
# pcb:note For humidity sensing, ensure the sensor has adequate ventilation
# pcb:sch BME280 x=24.4000 y=202.2000 rot=0
# pcb:sch C_VDD.C x=-97.5200 y=316.5000 rot=0
# pcb:sch R_SCL.R x=382.5400 y=214.9000 rot=180
# pcb:sch R_SDA.R x=484.1400 y=214.9000 rot=180
# pcb:sch GND.1 x=113.3000 y=545.1000 rot=0
# pcb:sch VDD.1 x=118.3800 y=138.7000 rot=0
# pcb:sch VCC.1 x=118.3800 y=100.6000 rot=0
# pcb:sch C_VDDIO.C x=524.7800 y=240.3000 rot=0
# pcb:sch CSB.VCC.1 x=92.9800 y=100.6000 rot=0
# pcb:sch VDD.VCC.1 x=-84.8200 y=151.4000 rot=0
# pcb:sch VDDIO.VCC.1 x=219.9800 y=126.0000 rot=0

# pcb:sch TP_SCL.TP x=346.9800 y=54.8800 rot=0
# pcb:sch TP_SDA.TP x=423.1800 y=54.8800 rot=0
# pcb:sch TP_CSB.TP x=397.7800 y=143.7800 rot=0
# pcb:sch TP_SCK.TP x=321.5800 y=143.7800 rot=0
# pcb:sch TP_SDI.TP x=359.6800 y=143.7800 rot=0
# pcb:sch TP_SDO.TP x=283.4800 y=143.7800 rot=0