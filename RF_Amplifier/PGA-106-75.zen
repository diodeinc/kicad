"""PGA-106-75+ - 50MHz to 1.5GHz High Dynamic Range CATV Amplifier

The PGA-106-75+ is a high-performance wideband amplifier designed for CATV 
applications, offering exceptional linearity with +37 dBm output IP3 and 
17.4 dB gain at 500 MHz. Built using E-PHEMT technology, it provides low 
noise figure (3.1 dB), high output power (+19.8 dBm P1dB), and excellent 
CSO/CTB performance. The device operates from a single +5V supply at 116mA 
typical current and is housed in a SOT-89 package for good thermal performance. 
It's ideal for CATV, GPON, MOCA, and DBS applications requiring high dynamic 
range from 50 MHz to 1.5 GHz.

Key specifications:
- Frequency range: 50 MHz to 1.5 GHz
- Gain: 17.4 dB typical at 500 MHz
- Output IP3: +37.3 dBm typical at 500 MHz
- Output P1dB: +19.8 dBm typical at 500 MHz
- Noise figure: 3.1 dB typical at 500 MHz
- Supply: +5V @ 116mA typical

Author: @anthropic/claude-opus-4
Reviewer: Nasheed Ur Rehman
Datasheet: https://www.minicircuits.com/pdfs/PGA-106-75+.pdf
"""

load("@stdlib/interfaces.zen", "Power")

# Dependencies
Resistor = Module("@stdlib/generics/Resistor.zen")
Capacitor = Module("@stdlib/generics/Capacitor.zen")
Inductor = Module("@stdlib/generics/Inductor.zen")
FerriteBead = Module("@stdlib/generics/FerriteBead.zen")
TestPoint = Module("@stdlib/generics/TestPoint.zen")

# Types

# Configuration
# Power supply configuration
add_ferrite_bead = config("add_ferrite_bead", bool, default = True)
add_bulk_cap = config("add_bulk_cap", bool, default = True)
add_decoupling = config("add_decoupling", bool, default = True)

# Bias configuration
bias_inductor_value = config("bias_inductor_value", str, default = "100nH")
bias_cap_value = config("bias_cap_value", str, default = "1.3pF")

# Coupling capacitor configuration
dc_blocking_cap_value = config("dc_blocking_cap_value", str, default = "2.4nF")



# Protection configuration
add_input_protection = config("add_input_protection", bool, default = True)
add_output_protection = config("add_output_protection", bool, default = True)

# Test points
add_test_points = config("add_test_points", bool, default = True)

# External IO
VDD = io("VDD", Power, default = Power("VDD"))
GND = io("GND", Net, default = Net("GND", symbol = Symbol("@kicad-symbols/power.kicad_sym:GND")))
RFIN = io("RFIN", Net)
RFOUT = io("RFOUT", Net)

# Internal nets
_VDD_FILT = Net("VDD_FILT")  # Filtered power supply
_RFIN_INT = Net("RFIN_INT")  # Internal RF input after DC blocking
_BIAS_NODE = Net("BIAS_NODE")  # Bias injection point
_RFIN_MATCHED = Net("RFIN_MATCHED")  # Input after matching network
_RFOUT_MATCHED = Net("RFOUT_MATCHED")  # Output before matching network

# Power supply filtering
if add_ferrite_bead:
    FerriteBead(name = "FB1", package = "0805", P1 = VDD.NET, P2 = _VDD_FILT)
else:
    _VDD_FILT = VDD.NET

# Bulk capacitor
if add_bulk_cap:
    Capacitor(name = "C_BULK", value = "0.1uF", voltage = "10V", package = "0805", P1 = _VDD_FILT, P2 = GND)

# Decoupling capacitors
if add_decoupling:
    Capacitor(name = "C_DEC1", value = "100nF", voltage = "10V", package = "0402", P1 = _VDD_FILT, P2 = GND)
    Capacitor(name = "C_DEC2", value = "1nF", voltage = "10V", package = "0402", P1 = _VDD_FILT, P2 = GND)
    Capacitor(name = "C_DEC3", value = "100pF", voltage = "10V", package = "0402", P1 = _VDD_FILT, P2 = GND)

# Main component - corrected pin names
Component(
    name = "U1",
    symbol = Symbol(library = "@kicad-symbols/RF_Amplifier.kicad_sym", name = "PGA-106-75"),
    footprint = File("@kicad-footprints/Package_TO_SOT_SMD.pretty/SOT-89-3.kicad_mod"),
    pins = {
        "1": _RFIN_MATCHED,     # RF input
        "GND": GND,             # Ground (center pin and exposed paddle)
        "3": _BIAS_NODE         # RF output and DC bias
    }
)

# Input DC blocking capacitor
Capacitor(name = "C_IN", value = dc_blocking_cap_value, voltage = "50V", package = "0603", P1 = RFIN, P2 = _RFIN_INT)

# Input matching network - Optimized based on eval board TB-670+
# Define intermediate net
_N_L1_L2 = Net("N_L1_L2")    # Net between L1 and L2

# First shunt cap to ground after DC blocking
Capacitor(name = "C_IN_SHUNT1", value = "0.5pF", voltage = "50V", package = "0402", P1 = _RFIN_INT, P2 = GND)

# L1 inductor
Inductor(name = "L1", value = "7.5nH", package = "0603", P1 = _RFIN_INT, P2 = _N_L1_L2)

# Second shunt cap to ground between L1 and L2
Capacitor(name = "C_IN_SHUNT2", value = "1.3pF", voltage = "50V", package = "0402", P1 = _N_L1_L2, P2 = GND)

# L2 inductor
Inductor(name = "L2", value = "7.5nH", package = "0603", P1 = _N_L1_L2, P2 = _RFIN_MATCHED)

# Bias circuit - RF choke for bias injection
Inductor(name = "L_BIAS", value = bias_inductor_value, package = "0603", P1 = _VDD_FILT, P2 = _BIAS_NODE)

# Output matching network - Optimized based on eval board TB-670+
# Define intermediate nets
_N_C3_L3 = Net("N_C3_L3")      # Net between C3 and L3
_N_L3_L4 = Net("N_L3_L4")      # Net between L3 and L4

# DC blocking capacitor between bias node and L3
Capacitor(name = "C_OUT_DC_BLOCK", value = bias_cap_value, voltage = "50V", package = "0402", P1 = _BIAS_NODE, P2 = _N_C3_L3)

# L3 inductor (4.7nH)
Inductor(name = "L3", value = "4.7nH", package = "0603", P1 = _N_C3_L3, P2 = _N_L3_L4)

# Shunt cap to ground between L3 and L4
Capacitor(name = "C_OUT_SHUNT1", value = "1.2pF", voltage = "50V", package = "0402", P1 = _N_L3_L4, P2 = GND)

# L4 inductor (7.5nH)
Inductor(name = "L4", value = "7.5nH", package = "0603", P1 = _N_L3_L4, P2 = _RFOUT_MATCHED)

# Final shunt cap to ground after L4
Capacitor(name = "C_OUT_SHUNT2", value = "0.7pF", voltage = "50V", package = "0402", P1 = _RFOUT_MATCHED, P2 = GND)

# Output DC blocking capacitor - connects to external RFOUT
Capacitor(name = "C_OUT", value = dc_blocking_cap_value, voltage = "50V", package = "0603", P1 = _RFOUT_MATCHED, P2 = RFOUT)

# Input protection (optional)
if add_input_protection:
    # ESD protection diode for input
    Component(
        name = "D_IN",
        symbol = Symbol(library = "@kicad-symbols/Diode.kicad_sym", name = "ESD9B5.0ST5G"),
        footprint = File("@kicad-footprints/Diode_SMD.pretty/D_0402_1005Metric.kicad_mod"),
        pins = {
            "A1": RFIN,
            "A2": GND
        }
    )

# Output protection (optional)
if add_output_protection:
    # ESD protection diode for output
    Component(
        name = "D_OUT",
        symbol = Symbol(library = "@kicad-symbols/Diode.kicad_sym", name = "ESD9B5.0ST5G"),
        footprint = File("@kicad-footprints/Diode_SMD.pretty/D_0402_1005Metric.kicad_mod"),
        pins = {
            "A1": RFOUT,
            "A2": GND
        }
    )

# Test points
if add_test_points:
    TestPoint(name = "TP_VDD", variant = "THTPad_D1.0mm_Drill0.5mm", P1 = _VDD_FILT)
    TestPoint(name = "TP_BIAS", variant = "THTPad_D1.0mm_Drill0.5mm", P1 = _BIAS_NODE)
    TestPoint(name = "TP_GND", variant = "THTPad_D1.0mm_Drill0.5mm", P1 = GND)
    TestPoint(name = "TP_RFIN", variant = "THTPad_D1.0mm_Drill0.5mm", P1 = RFIN)
    TestPoint(name = "TP_RFOUT", variant = "THTPad_D1.0mm_Drill0.5mm", P1 = RFOUT)

# PCB placement hints
# pcb:sch U1 x=494.3000 y=824.5000 rot=0
# pcb:sch C_IN.C x=-84.8200 y=837.2000 rot=270
# pcb:sch C_OUT.C x=1096.2800 y=837.2000 rot=270
# pcb:sch L_BIAS.L x=672.0991 y=735.6000 rot=0
# pcb:sch C_BULK.C x=816.8800 y=710.2000 rot=0
# pcb:sch C_DEC1.C x=943.8800 y=710.2000 rot=0
# pcb:sch C_DEC2.C x=1070.8800 y=710.2000 rot=0
# pcb:sch C_DEC3.C x=1185.1800 y=710.2000 rot=0
# pcb:sch FB1.FB x=580.9140 y=659.4000 rot=270
# pcb:sch GND.1 x=532.4000 y=1015.0000 rot=0
# pcb:sch GND.2 x=1015.0000 y=811.8000 rot=0
# pcb:sch GND.3 x=1015.0000 y=1015.0000 rot=0
# pcb:sch VDD.1 x=100.0000 y=200.0000 rot=0
# pcb:sch TP_VDD.TP x=664.4800 y=618.7600 rot=0
# pcb:sch TP_BIAS.TP x=664.4800 y=847.3600 rot=180
# pcb:sch TP_GND.TP x=423.1800 y=796.5600 rot=0
# pcb:sch VDD_VCC.1 x=537.4800 y=595.9000 rot=0
# pcb:sch L1.L x=176.7991 y=837.2000 rot=270
# pcb:sch L2.L x=329.1991 y=837.2000 rot=270
# pcb:sch L3.L x=824.4991 y=837.2000 rot=270
# pcb:sch L4.L x=964.1991 y=837.2000 rot=270
# pcb:sch C_IN_SHUNT2.C x=232.6800 y=900.7000 rot=0
# pcb:sch C_OUT_DC_BLOCK.C x=715.2800 y=837.2000 rot=270
# pcb:sch C_OUT_SHUNT2.C x=1007.3800 y=900.7000 rot=0
# pcb:sch C_IN_SHUNT1.C x=80.2800 y=900.7000 rot=0
# pcb:sch C_OUT_SHUNT1.C x=867.6800 y=900.7000 rot=0
# pcb:sch D_IN x=-153.4000 y=913.4000 rot=90
# pcb:sch D_OUT x=1167.4000 y=926.1000 rot=90
# pcb:sch TP_RFIN.TP x=-122.9200 y=771.1600 rot=0
# pcb:sch TP_RFOUT.TP x=1274.0800 y=809.2600 rot=0