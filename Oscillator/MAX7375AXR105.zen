"""MAX7375AXR105 - 1MHz Silicon Clock Oscillator

The MAX7375 is a silicon oscillator designed as a low-cost replacement for ceramic resonators, 
crystals, and crystal oscillator modules used as clock sources for microcontrollers and UARTs 
in 3V, 3.3V, and 5V applications. This specific variant (MAX7375AXR105) provides a factory-trimmed 
1.000MHz output frequency with ±2% initial accuracy and ±50ppm/°C temperature drift. The device 
features a push-pull output capable of driving ±10mA, fast 5μs startup time, and operates from 
2.7V to 5.5V supply voltage. With no external components required and excellent resistance to 
vibration and EMI, it provides a robust clock source in a tiny SC70-3 package.

Key features:
- 1.000MHz factory-trimmed frequency
- 2.7V to 5.5V operation
- ±2% initial accuracy at 25°C
- ±50ppm/°C temperature drift
- ±10mA output drive capability
- 5μs fast startup time
- 40% to 60% duty cycle
- Very low jitter: 160ps p-p at 8MHz
- No external components required
- -40°C to +125°C operating temperature range
- SC70-3 package

Author: @anthropic/claude-opus-4
Reviewer: Nasheed Ur Rehman
Datasheet: https://www.analog.com/media/en/technical-documentation/data-sheets/MAX7375.pdf
"""

# Dependencies
Resistor = Module("@stdlib/generics/Resistor.zen")
Capacitor = Module("@stdlib/generics/Capacitor.zen")
TestPoint = Module("@stdlib/generics/TestPoint.zen")
FerriteBead = Module("@stdlib/generics/FerriteBead.zen")

# Types
OutputLoadConfiguration = enum("Light", "Medium", "Heavy")
PowerSupplyConfiguration = enum("Clean", "Noisy")

# Configuration
# Power supply configuration
power_supply_config = config("power_supply_config", PowerSupplyConfiguration, default = "Noisy")
add_bulk_capacitor = config("add_bulk_capacitor", bool, default = True)

# Output configuration
output_load_config = config("output_load_config", OutputLoadConfiguration, default = "Light")
add_series_termination = config("add_series_termination", bool, default = True)
if add_series_termination:
    series_termination_value = config("series_termination_value", str, default = "33ohms")

# Test points
add_test_points = config("add_test_points", bool, default = True)

# External IO
VCC = io("VCC", Net, default = Net("VCC", symbol = Symbol("@kicad-symbols/power.kicad_sym:VCC")))
GND = io("GND", Net, default = Net("GND", symbol = Symbol("@kicad-symbols/power.kicad_sym:GND")))
CLOCK_OUT = io("CLOCK_OUT", Net, default = Net("CLK_1MHZ"))

# Internal nets
if add_series_termination:
    _CLOCK_INT = Net("CLOCK_INT")
else:
    _CLOCK_INT = CLOCK_OUT

# Power supply net (filtered or direct)
if power_supply_config == PowerSupplyConfiguration("Noisy"):
    _VCC_CHIP = Net("VCC_FILTERED")
else:
    _VCC_CHIP = VCC

# Main component
Component(
    name = "MAX7375",
    symbol = Symbol(library = "@kicad-symbols/Oscillator.kicad_sym", name = "MAX7375AXR105"),
    footprint = File("@kicad-footprints/Package_TO_SOT_SMD.pretty/SOT-323_SC-70.kicad_mod"),
    pins = {
        "V+": _VCC_CHIP,     # Pin 1 - Positive supply voltage (filtered if noisy)
        "CLOCK": _CLOCK_INT, # Pin 2 - Clock output
        "GND": GND,          # Pin 3 - Ground
    },
)

# Power supply decoupling
# From datasheet: 0.1μF ceramic capacitor mounted as close as possible to the device
Capacitor(
    name = "C_DECOUPLE",
    value = "0.1uF",
    voltage = "16V",
    dielectric = "X7R",
    package = "0402",
    P1 = _VCC_CHIP,  # Connect to the same power net as the chip
    P2 = GND,
)

# Additional decoupling based on power supply configuration
if power_supply_config == PowerSupplyConfiguration("Noisy"):
    # Add ferrite bead and additional filtering for noisy supplies
    
    FerriteBead(
        name = "FB_VCC",
        frequency = "100MHz",
        resistance = "600ohm",
        package = "0603",
        P1 = VCC,
        P2 = _VCC_CHIP,  # Connect filtered output to chip power net
    )
    
    # Additional ceramic capacitor after ferrite bead
    Capacitor(
        name = "C_FILTER",
        value = "1uF",
        voltage = "10V",
        dielectric = "X7R",
        package = "0603",
        P1 = _VCC_CHIP,  # Connect to filtered power net
        P2 = GND,
    )

# Bulk capacitor for heavy loads or when MAX7375 is far from main supply decoupling
if add_bulk_capacitor:
    Capacitor(
        name = "C_BULK",
        value = "10uF",
        voltage = "10V",
        dielectric = "X7R",
        package = "0805",
        P1 = VCC,
        P2 = GND,
    )

# Output load handling
# From datasheet: Use bypass cap value at least 1000x the output load capacitance
if output_load_config == OutputLoadConfiguration("Heavy"):
    # For heavy capacitive loads (>50pF), add larger bypass capacitor
    Capacitor(
        name = "C_LOAD_BYPASS",
        value = "0.1uF",
        voltage = "10V", 
        dielectric = "X7R",
        package = "0603",
        P1 = VCC,
        P2 = GND,
    )

# Series termination resistor (optional)
if add_series_termination:
    Resistor(
        name = "R_TERM",
        value = series_termination_value,
        package = "0402",
        P1 = _CLOCK_INT,
        P2 = CLOCK_OUT,
    )

# Test points
if add_test_points:
    TestPoint(name = "TP_VCC", variant = "THTPad_D1.0mm_Drill0.5mm", P1 = VCC)
    TestPoint(name = "TP_CLK", variant = "THTPad_D1.0mm_Drill0.5mm", P1 = CLOCK_OUT)
    TestPoint(name = "TP_GND", variant = "THTPad_D1.0mm_Drill0.5mm", P1 = GND)

# PCB layout hints for optimal performance:
# 1. Place C_DECOUPLE as close as possible to pins 1 and 3
# 2. Keep clock output trace short and away from high-current traces
# 3. Use solid ground plane under the oscillator
# 4. If using guard ring, surround oscillator with grounded copper pour
# 5. Keep sensitive analog circuits away from clock output

# Schematic placement suggestions
# pcb:sch MAX7375 x=62.5000 y=87.9000 rot=0
# pcb:sch C_DECOUPLE.C x=-288.0200 y=126.0000 rot=0
# pcb:sch GND.1 x=100.6000 y=265.7000 rot=0
# pcb:sch VCC.1 x=-465.8200 y=37.1000 rot=0
# pcb:sch TP_CLK.TP x=346.9800 y=85.3600 rot=0
# pcb:sch TP_VCC.TP x=-554.7200 y=21.8600 rot=0
# pcb:sch TP_GND.TP x=131.0800 y=212.3600 rot=90
# pcb:sch C_BULK.C x=-478.5200 y=126.0000 rot=0
# pcb:sch C_FILTER.C x=-110.2200 y=126.0000 rot=0
# pcb:sch FB_VCC.FB x=-396.9860 y=37.1000 rot=270
# pcb:sch C_LOAD_BYPASS.C x=-643.6200 y=126.0000 rot=0
# pcb:sch R_TERM.R x=268.2400 y=126.0000 rot=270