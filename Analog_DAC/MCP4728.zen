"""MCP4728 - 12-Bit, Quad Digital-to-Analog Converter with EEPROM Memory

The MCP4728 is a quad, 12-bit voltage output Digital-to-Analog Converter (DAC) with 
nonvolatile memory (EEPROM). Its on-board precision output amplifier allows it to 
achieve rail-to-rail analog output swing. The DAC input codes, device configuration 
bits, and I²C address bits are programmable to the nonvolatile memory (EEPROM) using 
the I²C interface. The nonvolatile memory feature enables the DAC device to hold the 
DAC input codes during power-off time, allowing the DAC outputs to be available 
immediately after power-up with saved settings. The device includes a high-precision 
internal voltage reference (VREF = 2.048V). Users can select either the internal 
reference or external reference (VDD) for each channel individually. Each channel 
can operate in Normal mode or Power-Down mode individually.

Author: @anthropic/claude-opus-4
Reviewer: Nasheed Ur Rehman
Datasheet: http://ww1.microchip.com/downloads/en/DeviceDoc/22187E.pdf
"""

load("@stdlib/interfaces.zen", "I2c")

# Dependencies
Resistor = Module("@stdlib/generics/Resistor.zen")
Capacitor = Module("@stdlib/generics/Capacitor.zen")

RdyConfig = enum("Pullup", "PullDown", "None")
LDACConfig = enum("Pullup", "PullDown", "None")
# Types
I2cAddress = enum("0x60", "0x61", "0x62", "0x63", "0x64", "0x65", "0x66", "0x67")

# Configuration
add_decoupling_cap = config("add_decoupling_cap", bool, default = True)
add_bulk_cap = config("add_bulk_cap", bool, default = True)
add_i2c_pullups = config("add_i2c_pullups", bool, default = True)
rdy_config = config("rdy_config", RdyConfig, default = RdyConfig("None"))
ldac_config = config("ldac_config", LDACConfig, default = LDACConfig("PullDown"))
add_output_filters = config("add_output_filters", bool, default = True)
i2c_address = config("i2c_address", I2cAddress, default = I2cAddress("0x60"))

# External IO
i2c = io("I2C", I2c, default = I2c("I2C"))
VDD = io("VDD", Net, default = Net("VDD", symbol = Symbol("@kicad-symbols/power.kicad_sym:VDD")))
VSS = io("VSS", Net, default = Net("VSS", symbol = Symbol("@kicad-symbols/power.kicad_sym:GND")))
LDAC = io("LDAC", Net, default = Net("LDAC"))
RDY_BSY = io("RDY_BSY", Net, default = Net("RDY_BSY"))
VOUTA = io("VOUTA", Net, default = Net("VOUTA"))
VOUTB = io("VOUTB", Net, default = Net("VOUTB"))
VOUTC = io("VOUTC", Net, default = Net("VOUTC"))
VOUTD = io("VOUTD", Net, default = Net("VOUTD"))

# 12-bit quad digital to analog converter, 2.048V internal reference, integrated EEPROM, I2C interface
Component(
    name = "MCP4728",
    symbol = Symbol(library = "@kicad-symbols/Analog_DAC.kicad_sym", name = "MCP4728"),
    footprint = File("@kicad-footprints/Package_SO.pretty/MSOP-10_3x3mm_P0.5mm.kicad_mod"),
    pins = {
        "VDD": VDD,
        "SCL": i2c.SCL,
        "SDA": i2c.SDA,
        "~{LDAC}": LDAC,
        "RDY/~{BSY}": RDY_BSY,
        "VOUTA": VOUTA,
        "VOUTB": VOUTB,
        "VOUTC": VOUTC,
        "VOUTD": VOUTD,
        "VSS": VSS
    },
)

# Power Supply Decoupling - Datasheet recommends 0.1µF ceramic capacitor close to VDD pin
if add_decoupling_cap:
    # Primary ceramic decoupling capacitor - place within 4mm of VDD pin
    Capacitor(name = "C_DEC", value = "100nF", package = "0402", P1 = VDD, P2 = VSS)

# Bulk capacitor - Datasheet recommends 10µF tantalum for additional power supply filtering
if add_bulk_cap:
    # Tantalum or ceramic bulk capacitor for low frequency noise suppression
    Capacitor(name = "C_BULK", value = "10uF", package = "0805", P1 = VDD, P2 = VSS)

# I2C Pull-up Resistors - Required for proper I2C operation
if add_i2c_pullups:
    # SDA pull-up resistor (typical 5k-10k for standard/fast mode, <1k for high speed mode)
    Resistor(name = "R_SDA", value = "4.7kohms", package = "0402", P1 = i2c.SDA, P2 = VDD)
    
    # SCL pull-up resistor (typical 5k-10k for standard/fast mode, <1k for high speed mode)
    Resistor(name = "R_SCL", value = "4.7kohms", package = "0402", P1 = i2c.SCL, P2 = VDD)

# RDY/BSY Pin Configuration - Open-drain output
if rdy_config == RdyConfig("Pullup"):
    # RDY/BSY pull-up resistor (datasheet recommends ~100k)
    Resistor(name = "R_RDY", value = "100kohms", package = "0402", P1 = RDY_BSY, P2 = VDD)
elif rdy_config == RdyConfig("PullDown"):
    # RDY/BSY pull-down resistor
    Resistor(name = "R_RDY", value = "100kohms", package = "0402", P1 = RDY_BSY, P2 = VSS)
# else: None - no resistor connected

# LDAC Pin Configuration - Active low, updates all DAC outputs when pulled low
if ldac_config == LDACConfig("Pullup"):
    # LDAC pull-up resistor
    Resistor(name = "R_LDAC", value = "10kohms", package = "0402", P1 = LDAC, P2 = VDD)
elif ldac_config == LDACConfig("PullDown"):
    # LDAC pull-down resistor (tied to VSS for immediate output updates)
    Resistor(name = "R_LDAC", value = "10kohms", package = "0402", P1 = LDAC, P2 = VSS)
# else: None - LDAC controlled directly by MCU

# Optional Output Filters - For noise-sensitive applications
if add_output_filters:
    # Channel A output filter
    _VOUTA_FILTERED = Net("VOUTA_FILTERED")
    Resistor(name = "R_FILTER_A", value = "100ohms", package = "0402", P1 = VOUTA, P2 = _VOUTA_FILTERED)
    Capacitor(name = "C_FILTER_A", value = "100pF", package = "0402", P1 = _VOUTA_FILTERED, P2 = VSS)
    VOUTA = _VOUTA_FILTERED
    
    # Channel B output filter
    _VOUTB_FILTERED = Net("VOUTB_FILTERED")
    Resistor(name = "R_FILTER_B", value = "100ohms", package = "0402", P1 = VOUTB, P2 = _VOUTB_FILTERED)
    Capacitor(name = "C_FILTER_B", value = "100pF", package = "0402", P1 = _VOUTB_FILTERED, P2 = VSS)
    VOUTB = _VOUTB_FILTERED
    
    # Channel C output filter
    _VOUTC_FILTERED = Net("VOUTC_FILTERED")
    Resistor(name = "R_FILTER_C", value = "100ohms", package = "0402", P1 = VOUTC, P2 = _VOUTC_FILTERED)
    Capacitor(name = "C_FILTER_C", value = "100pF", package = "0402", P1 = _VOUTC_FILTERED, P2 = VSS)
    VOUTC = _VOUTC_FILTERED
    
    # Channel D output filter
    _VOUTD_FILTERED = Net("VOUTD_FILTERED")
    Resistor(name = "R_FILTER_D", value = "100ohms", package = "0402", P1 = VOUTD, P2 = _VOUTD_FILTERED)
    Capacitor(name = "C_FILTER_D", value = "100pF", package = "0402", P1 = _VOUTD_FILTERED, P2 = VSS)
    VOUTD = _VOUTD_FILTERED

# pcb:sch C_BULK.C x=766.0800 y=240.3000 rot=0
# pcb:sch C_DEC.C x=664.4800 y=240.3000 rot=0
# pcb:sch MCP4728 x=1027.7000 y=189.5000 rot=0
# pcb:sch R_RDY.R x=738.1400 y=138.7000 rot=180
# pcb:sch R_SCL.R x=941.3400 y=138.7000 rot=180
# pcb:sch R_SDA.R x=877.8400 y=138.7000 rot=180
# pcb:sch VDD.1 x=1172.4800 y=87.9000 rot=0
# pcb:sch VSS.1 x=1167.4000 y=468.9000 rot=0
# pcb:sch C_FILTER_A.C x=1731.2800 y=329.2000 rot=0
# pcb:sch C_FILTER_B.C x=1629.6800 y=329.2000 rot=0
# pcb:sch C_FILTER_C.C x=1528.0800 y=329.2000 rot=0
# pcb:sch C_FILTER_D.C x=1426.4800 y=329.2000 rot=0
# pcb:sch R_FILTER_A.R x=1652.5400 y=202.2000 rot=270
# pcb:sch R_FILTER_B.R x=1576.3400 y=227.6000 rot=270
# pcb:sch R_FILTER_C.R x=1487.4400 y=253.0000 rot=270
# pcb:sch R_FILTER_D.R x=1385.8400 y=278.4000 rot=270
# pcb:sch R_LDAC.R x=877.8400 y=316.5000 rot=0