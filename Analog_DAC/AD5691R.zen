"""AD5691R - 12-Bit I2C nanoDAC+ with 2 ppm/°C Reference

The AD5691R is a low power, single-channel, 12-bit buffered voltage output DAC 
with an internal 2.5V reference offering 2 ppm/°C drift. The output span can be 
programmed to be 0V to VREF or 0V to 2×VREF. The device operates from a single 
2.7V to 5.5V supply and is guaranteed monotonic by design. It uses an I2C interface 
in a 10-lead MSOP package. The internal power-on reset circuit ensures that the 
DAC register is written to zero scale at power-up.

The I2C address is pin-selectable:
- 0x4C (A0 connected to GND)
- 0x4E (A0 connected to VLOGIC/VDD)

Author: @anthropic/claude-opus-4
Reviewer: Nasheed Ur Rehman
Datasheet: https://www.analog.com/media/en/technical-documentation/data-sheets/AD5693R-AD5692R-AD5691R-AD5693.pdf
"""

load("@stdlib/interfaces.zen", "I2c", "Power")

# Dependencies
Resistor = Module("@stdlib/generics/Resistor.zen")
Capacitor = Module("@stdlib/generics/Capacitor.zen")
TestPoint = Module("@stdlib/generics/TestPoint.zen")

# Types
I2cAddress = enum("0x4C", "0x4E")
ReferenceMode = enum("Internal", "External")
ResetConfig = enum("Pullup", "PullDown", "None")
LDACConfig = enum("Pullup", "PullDown", "None")

# I2C address mapping - maps I2C address to A0 pin connection
# According to datasheet:
# A0 = GND -> 0x4C (1001100b)
# A0 = VLOGIC (VDD on LFCSP) -> 0x4E (1001110b)
address_map = {
    I2cAddress("0x4C"): "GND",
    I2cAddress("0x4E"): "VLOGIC",
}

# Configuration
reference_mode = config("reference_mode", ReferenceMode, default = "External")
i2c_address = config("i2c_address", I2cAddress, default = I2cAddress("0x4C"))

# Component size configuration
passives_size = config("passives_size", str, default = "0402")
bulk_cap_size = config("bulk_cap_size", str, default = "0805")

# Power supply configuration
add_power_decoupling = config("add_power_decoupling", bool, default = True)
add_bulk_capacitor = config("add_bulk_capacitor", bool, default = True)
add_vlogic_supply = config("add_vlogic_supply", bool, default = False)

# Reference configuration
add_reference_decoupling = config("add_reference_decoupling", bool, default = True)
if add_reference_decoupling:
    reference_cap_value = config("reference_cap_value", str, default = "100nF")

# Control pin configuration
reset_config = config("reset_config", ResetConfig, default = ResetConfig("Pullup"))
ldac_config = config("ldac_config", LDACConfig, default = LDACConfig("PullDown"))

# I2C configuration
add_i2c_pullups = config("add_i2c_pullups", bool, default = True)

# Output configuration
add_output_filtering = config("add_output_filtering", bool, default = True)
if add_output_filtering:
    output_filter_r = config("output_filter_r", str, default = "100ohms")
    output_filter_c = config("output_filter_c", str, default = "100nF")

# Test points
add_test_points = config("add_test_points", bool, default = True)

# External IO
VDD = io("VDD", Power)
GND = io("GND", Net, default = Net("GND", symbol = Symbol("@kicad-symbols/power.kicad_sym:GND")))

# VLOGIC supply for MSOP package
if add_vlogic_supply:
    VLOGIC = io("VLOGIC", Power)
    _VLOGIC = VLOGIC.NET
else:
    _VLOGIC = VDD.NET  # Use VDD for VLOGIC if not separate

# I2C interface
i2c = io("I2C", I2c)

# Reference IO
if reference_mode == ReferenceMode("External"):
    VREF = io("VREF", Power)
    _VREF = VREF.NET
else:
    _VREF = Net("VREF")  # Internal reference

# Output
VOUT = io("VOUT", Net)

# Control pins
if reset_config == ResetConfig("None"):
    RESET = io("RESET", Net)
    _RESET = RESET
else:
    _RESET = Net("RESET")

if ldac_config == LDACConfig("None"):
    LDAC = io("LDAC", Net)
    _LDAC = LDAC
else:
    _LDAC = Net("LDAC")

# Address pin net based on selected I2C address
_a0_connection = address_map[i2c_address]
_A0 = _VLOGIC if _a0_connection == "VLOGIC" else GND

# Component definition - 10-Lead MSOP package only
Component(
    name = "AD5691R",
    symbol = Symbol(library = "@kicad-symbols/Analog_DAC.kicad_sym", name = "AD5691RxRM"),
    footprint = File("@kicad-footprints/Package_SO.pretty/MSOP-10_3x3mm_P0.5mm.kicad_mod"),
    pins = {
        "VDD": VDD.NET,
        "VLOGIC": _VLOGIC,
        "~{RESET}": _RESET,
        "~{LDAC}": _LDAC,
        "GND": GND,
        "A0": _A0,
        "SCL": i2c.SCL,
        "SDA": i2c.SDA,
        "VREF": _VREF,
        "VOUT": VOUT,
    },
)

# Power supply decoupling
if add_power_decoupling:
    Capacitor(
        name = "C_VDD",
        value = "100nF",
        package = passives_size,
        P1 = VDD.NET,
        P2 = GND,
    )

    if add_vlogic_supply:
        Capacitor(
            name = "C_VLOGIC",
            value = "100nF",
            package = passives_size,
            P1 = _VLOGIC,
            P2 = GND,
        )

# Bulk capacitor
if add_bulk_capacitor:
    Capacitor(
        name = "C_BULK",
        value = "10uF",
        package = bulk_cap_size,
        P1 = VDD.NET,
        P2 = GND,
    )

# Reference decoupling
if add_reference_decoupling:
    Capacitor(
        name = "C_REF",
        value = reference_cap_value,
        package = passives_size,
        P1 = _VREF,
        P2 = GND,
    )

# I2C pull-up resistors
if add_i2c_pullups:
    Resistor(
        name = "R_SCL",
        value = "4.7kohms",
        package = passives_size,
        P1 = i2c.SCL,
        P2 = VDD.NET,
    )

    Resistor(
        name = "R_SDA",
        value = "4.7kohms",
        package = passives_size,
        P1 = i2c.SDA,
        P2 = VDD.NET,
    )

# A0 address pin is internally connected based on i2c_address config

# Reset pin configuration
if reset_config == ResetConfig("Pullup"):
    # Pull-up resistor to VLOGIC/VDD
    Resistor(
        name = "R_RESET",
        value = "10kohms",
        package = passives_size,
        P1 = _RESET,
        P2 = _VLOGIC if add_vlogic_supply else VDD.NET,
    )
elif reset_config == ResetConfig("PullDown"):
    # Pull-down resistor to GND
    Resistor(
        name = "R_RESET",
        value = "10kohms",
        package = passives_size,
        P1 = _RESET,
        P2 = GND,
    )

# else: None - external control

# LDAC pin configuration
if ldac_config == LDACConfig("PullDown"):
    # Pull-down resistor for asynchronous mode
    Resistor(
        name = "R_LDAC",
        value = "10kohms",
        package = passives_size,
        P1 = _LDAC,
        P2 = GND,
    )
elif ldac_config == LDACConfig("Pullup"):
    # Pull-up resistor for asynchronous mode
    Resistor(
        name = "R_LDAC",
        value = "10kohms",
        package = passives_size,
        P1 = _LDAC,
        P2 = VDD.NET,
    )

# else: None - external control

# Output filtering (optional)
if add_output_filtering:
    _VOUT_FILTERED = Net("VOUT_FILTERED")

    # Series resistor
    Resistor(
        name = "R_OUT",
        value = output_filter_r,
        package = passives_size,
        P1 = VOUT,
        P2 = _VOUT_FILTERED,
    )

    # Filter capacitor
    Capacitor(
        name = "C_OUT",
        value = output_filter_c,
        package = passives_size,
        P1 = _VOUT_FILTERED,
        P2 = GND,
    )

# Test points (optional)
if add_test_points:
    TestPoint(
        name = "TP_VOUT",
        variant = "THTPad_D1.0mm_Drill0.5mm",
        P1 = VOUT,
    )

    if reference_mode != ReferenceMode("Internal"):
        TestPoint(
            name = "TP_VREF",
            variant = "THTPad_D1.0mm_Drill0.5mm",
            P1 = _VREF,
        )

# PCB placement hints
# pcb:sch NT_A0.NT x=850.0 y=950.0 rot=0
# pcb:sch VDD.1 x=1150.0 y=800.0 rot=0
# pcb:sch NT_VOUT.NT x=1878.6000 y=443.5000 rot=0
# pcb:sch A0_VCC.1 x=1045.4800 y=888.0000 rot=0

# pcb:sch AD5691R x=951.5000 y=976.9000 rot=0
# pcb:sch C_BULK.C x=664.4800 y=1040.4000 rot=0
# pcb:sch C_OUT.C x=1337.5800 y=1116.6000 rot=0
# pcb:sch C_REF.C x=1159.7800 y=1129.3000 rot=0
# pcb:sch C_VDD.C x=562.8800 y=1040.4000 rot=0
# pcb:sch C_VLOGIC.C x=1439.1800 y=1065.8000 rot=0
# pcb:sch R_LDAC.R x=788.9400 y=1103.9000 rot=90
# pcb:sch R_OUT.R x=1271.5400 y=1040.4000 rot=270
# pcb:sch R_RESET.R x=788.9400 y=938.8000 rot=180
# pcb:sch R_SCL.R x=903.2400 y=938.8000 rot=180
# pcb:sch R_SDA.R x=839.7400 y=938.8000 rot=180
# pcb:sch TP_VOUT.TP x=1210.5800 y=999.7600 rot=0
# pcb:sch TP_VREF.TP x=1210.5800 y=910.8600 rot=0
# pcb:sch GND.1 x=1040.4000 y=1243.6000 rot=0
# pcb:sch VDD_VCC.1 x=1070.8800 y=888.0000 rot=0
# pcb:sch VLOGIC_VCC.1 x=1045.4800 y=799.1000 rot=0
# pcb:sch VREF_VCC.1 x=1172.4800 y=888.0000 rot=0
