"""NCP1117-ADJ - 1.0A Low-Dropout Positive Adjustable Voltage Regulator (SOT-223 Package)

The NCP1117-ADJ is a low dropout positive voltage regulator capable of providing 
an output current in excess of 1.0A with a maximum dropout voltage of 1.2V at 
800mA. This adjustable output version can be programmed from 1.25V to 18.8V with 
two external resistors. It features output current limiting, safe operating area 
compensation, and thermal shutdown protection. The device can operate with up to 
20V input and requires no minimum load for regulation. The SOT-223 package provides 
good thermal performance in a surface mount format.

Author: @anthropic/claude-opus-4
Reviewer: Nasheed Ur Rehman
Datasheet: https://www.onsemi.com/pdf/datasheet/ncp1117-d.pdf
"""

# Dependencies
Resistor = Module("@stdlib/generics/Resistor.zen")
Capacitor = Module("@stdlib/generics/Capacitor.zen")
TestPoint = Module("@stdlib/generics/TestPoint.zen")
Diode = Module("@stdlib/generics/Diode.zen")

# Types
OutputVoltage = enum("1.5V", "1.8V", "2.5V", "3.3V", "5.0V", "12V", "Custom")
ProtectionDiodes = enum("None", "Input", "Output", "Full")

# Configuration
output_voltage = config("output_voltage", OutputVoltage, default = "3.3V")
if output_voltage == OutputVoltage("Custom"):
    custom_r1 = config("custom_r1", str, default = "120ohm", optional = True)
    custom_r2 = config("custom_r2", str, default = "196ohm", optional = True)

add_input_cap = config("add_input_cap", bool, default = True)
add_output_cap = config("add_output_cap", bool, default = True)
add_bypass_cap = config("add_bypass_cap", bool, default = True)
if add_bypass_cap:
    bypass_cap_value = config("bypass_cap_value", str, default = "10uF")

add_protection_diodes = config("add_protection_diodes", ProtectionDiodes, default = "Full")
add_test_points = config("add_test_points", bool, default = True)

# External IO
VIN = io("VIN", Net, default = Net("VIN", symbol = Symbol("@kicad-symbols/power.kicad_sym:VDD")))
VOUT = io("VOUT", Net, default = Net("VOUT", symbol = Symbol("@kicad-symbols/power.kicad_sym:VDD")))
GND = io("GND", Net, default = Net("GND", symbol = Symbol("@kicad-symbols/power.kicad_sym:GND")))

# Internal nets
_ADJ = Net("ADJ")

# Main component
Component(
    name = "U1",
    symbol = Symbol(library = "@kicad-symbols/Regulator_Linear.kicad_sym", name = "NCP1117-ADJ_SOT223"),
    footprint = File("@kicad-footprints/Package_TO_SOT_SMD.pretty/SOT-223-3_TabPin2.kicad_mod"),
    pins = {
        "VI": VIN,
        "ADJ": _ADJ,
        "VO": VOUT
    },
)

# Calculate resistor values based on output voltage
# VOUT = VREF * (1 + R2/R1) + IADJ * R2
# VREF = 1.25V, IADJ = 52uA typical
# Using R1 = 120 ohms for good regulation (>10mA through divider)
if output_voltage == OutputVoltage("1.5V"):
    r1_value = "120ohm"
    r2_value = "24ohm"
elif output_voltage == OutputVoltage("1.8V"):
    r1_value = "120ohm"
    r2_value = "52.8ohm"
elif output_voltage == OutputVoltage("2.5V"):
    r1_value = "120ohm"
    r2_value = "120ohm"
elif output_voltage == OutputVoltage("3.3V"):
    r1_value = "120ohm"
    r2_value = "196ohm"
elif output_voltage == OutputVoltage("5.0V"):
    r1_value = "120ohm"
    r2_value = "360ohm"
elif output_voltage == OutputVoltage("12V"):
    r1_value = "120ohm"
    r2_value = "1030ohm"
else:  # Custom
    r1_value = custom_r1
    r2_value = custom_r2

# Voltage setting resistors
# R1 connects between VOUT and ADJ
Resistor(
    name = "R1",
    value = r1_value,
    package = "0603",
    P1 = VOUT,
    P2 = _ADJ
)

# R2 connects between ADJ and GND
Resistor(
    name = "R2", 
    value = r2_value,
    package = "0603",
    P1 = _ADJ,
    P2 = GND
)

# Input capacitor (10uF recommended if regulator is far from power source)
if add_input_cap:
    Capacitor(
        name = "C_IN",
        value = "10uF",
        voltage = "25V",
        package = "1206",
        P1 = VIN,
        P2 = GND
    )

# Output capacitor (required for stability, ESR must be between 33mΩ and 2.2Ω)
if add_output_cap:
    Capacitor(
        name = "C_OUT",
        value = "10uF",
        voltage = "16V", 
        package = "1206",
        P1 = VOUT,
        P2 = GND
    )

# ADJ bypass capacitor (improves ripple rejection)
if add_bypass_cap:
    Capacitor(
        name = "C_ADJ",
        value = bypass_cap_value,
        voltage = "16V",
        package = "0805",
        P1 = _ADJ,
        P2 = GND
    )

# Protection diodes
if add_protection_diodes != ProtectionDiodes("None"):
    # D1: Protects against input short when output cap > 50uF
    if add_protection_diodes == ProtectionDiodes("Input") or add_protection_diodes == ProtectionDiodes("Full"):
        Diode(
            name = "D1",
            variant = "Standard",
            package = "SMB",
            v_r = "40V",
            i_f = "1A",
            A = VOUT,
            K = VIN
        )
    
    # D2: Protects against output short when adjust cap > 1uF
    if add_protection_diodes == ProtectionDiodes("Output") or add_protection_diodes == ProtectionDiodes("Full"):
        Diode(
            name = "D2",
            variant = "Standard",
            package = "SMB",
            v_r = "40V",
            i_f = "1A",
            A = _ADJ,
            K = VOUT,
        )

# Test points
if add_test_points:
    TestPoint(
        name = "TP_VIN",
        variant = "Pad_1.0x1.0mm",
        P1 = VIN
    )
    
    TestPoint(
        name = "TP_VOUT",
        variant = "Pad_1.0x1.0mm",
        P1 = VOUT
    )
    
    TestPoint(
        name = "TP_ADJ",
        variant = "Pad_1.0x1.0mm",
        P1 = _ADJ
    )
    
    TestPoint(
        name = "TP_GND",
        variant = "Pad_1.0x1.0mm",
        P1 = GND
    )

# PCB Layout hints (as comments for the designer)
# pcb:sch U1 x=49.8000 y=-7.3500 rot=0
# pcb:sch R1.R x=306.3400 y=37.1000 rot=0
# pcb:sch R2.R x=306.3400 y=151.4000 rot=0
# pcb:sch C_IN.C x=-97.5200 y=75.2000 rot=0
# pcb:sch C_OUT.C x=372.3800 y=87.9000 rot=0
# pcb:sch D1.D x=87.9000 y=-140.7000 rot=0
# pcb:sch GND.1 x=113.3000 y=265.7000 rot=0
# pcb:sch VIN.1 x=-84.8200 y=-26.4000 rot=0
# pcb:sch VOUT.1 x=385.0800 y=-26.4000 rot=0
# pcb:sch C_ADJ.C x=105.6800 y=151.4000 rot=0
# pcb:sch D2.D x=176.8000 y=62.5000 rot=90
# pcb:sch TP_ADJ.TP x=42.1800 y=98.0600 rot=180
# pcb:sch TP_GND.TP x=42.1800 y=199.6600 rot=0
# pcb:sch TP_VIN.TP x=-8.6200 y=-54.3400 rot=0
# pcb:sch TP_VOUT.TP x=207.2800 y=-54.3400 rot=0