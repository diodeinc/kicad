"""RFM69W - ISM TRANSCEIVER MODULE

The RFM69W is a highly integrated RF transceiver module capable of operation over a wide 
frequency range, including the 315, 433, 868 and 915 MHz license-free ISM (Industry Scientific 
and Medical) frequency bands. It features +13 dBm output power, high sensitivity down to -120 dBm 
at 1.2 kbps, programmable narrow-band and wide-band communication modes, and supports FSK, GFSK, 
MSK, GMSK and OOK modulations. The module includes a 66-byte FIFO, packet engine with CRC-16, 
AES-128 encryption, and built-in temperature sensor.

Author: @anthropic/claude-opus-4
Reviewer: Nasheed Ur Rehman
Datasheet: https://www.hoperf.com/data/upload/portal/20190307/RFM69W-V1.3.pdf
"""

load("@stdlib/interfaces.zen", "Spi", "Power")

# Dependencies
Resistor = Module("@stdlib/generics/Resistor.zen")
Capacitor = Module("@stdlib/generics/Capacitor.zen")

# Types
AntennaConnector = enum("UFL", "SMA")

# Configuration
antenna_connector = config("antenna_connector", AntennaConnector, default = "UFL")
add_bulk_caps = config("add_bulk_caps", bool, default = True)
add_decoupling_caps = config("add_decoupling_caps", bool, default = True)

# External IO
VDD = io("3.3V", Power, default = Power("3.3V"))
GND = io("GND", Net, default = Net("GND", symbol = Symbol("@kicad-symbols/power.kicad_sym:GND")))

# SPI Interface
spi = io("SPI", Spi)

# Reset
RESET = io("RESET", Net)

# Digital IO pins
DIO0 = io("DIO0", Net)
DIO1 = io("DIO1", Net)
DIO2 = io("DIO2", Net)
DIO3 = io("DIO3", Net)
DIO4 = io("DIO4", Net)
DIO5 = io("DIO5", Net)

# Internal nets
_ANA = Net("ANA")  # Antenna connection

# ISM Radio Transceiver Module
Component(
    name = "RFM69W",
    symbol = Symbol(library = "@kicad-symbols/RF_Module.kicad_sym", name = "RFM69W"),
    footprint = File("@kicad-footprints/RF_Module.pretty/HOPERF_RFM69HW.kicad_mod"),
    pins = {
        "RESET": RESET,
        "DIO0": DIO0,
        "DIO1": DIO1,
        "DIO2": DIO2,
        "DIO3": DIO3,
        "DIO4": DIO4,
        "DIO5": DIO5,
        "3.3V": VDD.NET,
        "GND": GND,
        "ANA": _ANA,
        "SCK": spi.CLK,
        "MISO": spi.MISO,
        "MOSI": spi.MOSI,
        "NSS": spi.CS,
        "NC": GND,  # NC pin should be connected to GND per datasheet
    },
)

# Power Supply Capacitors
if add_bulk_caps:
    # Bulk capacitor for power input
    Capacitor(name = "C_BULK", value = "10uF", voltage = "16V", package = "0805", P1 = VDD.NET, P2 = GND)

if add_decoupling_caps:
    # Decoupling capacitors near module
    Capacitor(name = "C_VDD1", value = "100nF", package = "0402", P1 = VDD.NET, P2 = GND)
    Capacitor(name = "C_VDD2", value = "100nF", package = "0402", P1 = VDD.NET, P2 = GND)

# Antenna Connector
if antenna_connector == AntennaConnector("UFL"):
    # u.FL connector for external antenna
    Component(
        name = "J_ANT",
        symbol = Symbol(library = "@kicad-symbols/Connector.kicad_sym", name = "Conn_Coaxial"),
        footprint = File("@kicad-footprints/Connector_Coaxial.pretty/U.FL_Hirose_U.FL-R-SMT-1_Vertical.kicad_mod"),
        pins = {
            "In": _ANA,
            "Ext": GND
        }
    )
elif antenna_connector == AntennaConnector("SMA"):
    # SMA connector for external antenna
    Component(
        name = "J_ANT",
        symbol = Symbol(library = "@kicad-symbols/Connector.kicad_sym", name = "Conn_Coaxial"),
        footprint = File("@kicad-footprints/Connector_Coaxial.pretty/SMA_Samtec_SMA-J-P-H-ST-EM1_EdgeMount.kicad_mod"),
        pins = {
            "In": _ANA,
            "Ext": GND
        }
    )

# pcb:sch C_BULK.C x=537.4800 y=557.8000 rot=0
# pcb:sch C_VDD1.C x=677.1800 y=557.8000 rot=0
# pcb:sch C_VDD2.C x=778.7800 y=557.8000 rot=0
# pcb:sch J_ANT x=1243.6000 y=501.4343 rot=0
# pcb:sch RFM69W x=938.8000 y=468.9000 rot=0
# pcb:sch 3.3V_VCC.1 x=1058.1800 y=392.7000 rot=0
# pcb:sch GND.1 x=1078.5000 y=786.4000 rot=0