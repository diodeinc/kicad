"""LM20CIM7 - Precision Temperature Sensor, ±4°C to ±5°C accuracy, -55°C to +130°C range

The LM20 is a precision analog output CMOS integrated-circuit temperature sensor that 
operates over -55°C to 130°C. The power supply operating range is 2.4V to 5.5V. The 
transfer function of LM20 is predominately linear, yet has a slight predictable parabolic 
curvature. The accuracy of the LM20C variant is ±4°C to ±5°C (maximum) at an ambient 
temperature of 30°C. The temperature error increases linearly and reaches a maximum of 
±5°C at the temperature range extremes. The LM20 quiescent current is less than 10μA. 
Therefore, self-heating is less than 0.02°C in still air.

Author: @@anthropic/claude-opus-4
Reviewer: Nasheed Ur Rehman
Datasheet: https://www.ti.com/lit/ds/symlink/lm20.pdf
"""

load("@stdlib/interfaces.zen", "Power")

# Dependencies
Resistor = Module("@stdlib/generics/Resistor.zen")
Capacitor = Module("@stdlib/generics/Capacitor.zen")
TestPoint = Module("@stdlib/generics/TestPoint.zen")
NetTie = Module("@stdlib/generics/NetTie.zen")

# Types
FilterConfiguration = enum("None", "Basic", "Heavy")
OutputLoadConfiguration = enum("Light", "Heavy")

# Configuration
add_power_decoupling = config("add_power_decoupling", bool, default = True)
add_output_filtering = config("add_output_filtering", bool, default = True)
filter_configuration = config("filter_configuration", FilterConfiguration, default = "Basic")
output_load_configuration = config("output_load_configuration", OutputLoadConfiguration, default = "Heavy")
add_test_points = config("add_test_points", bool, default = False)
connect_die_ground = config("connect_die_ground", bool, default = True)

# Power supply voltage range configuration
supply_voltage = config("supply_voltage", str, default = "3.3V")  # Supply voltage (2.4V to 5.5V)

# External IO
VCC = io("VCC", Power)  # Power supply input (2.4V to 5.5V)
GND = io("GND", Net, default = Net("GND", symbol = Symbol("@kicad-symbols/power.kicad_sym:GND")))
VOUT = io("VOUT", Net)  # Temperature sensor analog output

# Internal nets
_VOUT_FILTERED = Net("VOUT_FILTERED") if add_output_filtering else VOUT
_NC = Net("NC")  # Not connected pin

# LM20 Temperature Sensor Component
Component(
    name = "LM20CIM7",
    symbol = Symbol(library = "@kicad-symbols/Sensor_Temperature.kicad_sym", name = "LM20CIM7"),
    footprint = File("@kicad-footprints/Package_TO_SOT_SMD.pretty/SOT-353_SC-70-5.kicad_mod"),
    pins = {
        "V+": VCC.NET,
        "GND": GND,
        "GND/DIE": GND if connect_die_ground else Net("DIE_GND"),
        "NC": _NC,
        "VO": _VOUT_FILTERED if add_output_filtering else VOUT
    },
)

# Power Supply Decoupling
if add_power_decoupling:
    # Primary decoupling capacitor close to the device
    Capacitor(
        name = "C_VCC",
        value = "100nF",
        voltage = "10V",
        package = "0402",
        P1 = VCC.NET,
        P2 = GND
    )
    
    # Additional bulk capacitor for improved noise rejection
    if filter_configuration == FilterConfiguration("Heavy"):
        Capacitor(
            name = "C_BULK",
            value = "1uF",
            voltage = "10V",
            package = "0603",
            P1 = VCC.NET,
            P2 = GND
        )

# Output Filtering Circuit
if add_output_filtering:
    # Series resistor value depends on load configuration
    if output_load_configuration == OutputLoadConfiguration("Light"):
        # For capacitive loads < 300pF, minimal series resistance needed
        series_r_value = "200ohms"
    else:
        # For heavier capacitive loads, increase series resistance
        series_r_value = "1kohms"
    
    # Series resistor for output filtering
    Resistor(
        name = "R_OUT",
        value = series_r_value,
        package = "0402",
        P1 = _VOUT_FILTERED,
        P2 = VOUT
    )
    
    # Output capacitor for noise filtering
    if filter_configuration == FilterConfiguration("Basic"):
        # Basic filtering for moderate noise environments
        Capacitor(
            name = "C_OUT",
            value = "100nF",
            voltage = "10V",
            package = "0402",
            P1 = VOUT,
            P2 = GND
        )
    elif filter_configuration == FilterConfiguration("Heavy"):
        # Heavy filtering for very noisy environments
        Capacitor(
            name = "C_OUT",
            value = "1uF",
            voltage = "10V",
            package = "0603",
            P1 = VOUT,
            P2 = GND
        )

# Test Points
if add_test_points:
    # Test point for output voltage measurement
    TestPoint(
        name = "TP_VOUT",
        variant = "THTPad_D1.5mm_Drill0.7mm",
        P1 = VOUT
    )
    
    # Test point for supply voltage
    TestPoint(
        name = "TP_VCC",
        variant = "THTPad_D1.5mm_Drill0.7mm",
        P1 = VCC.NET
    )

# Die Ground Connection
if not connect_die_ground:
    # When die ground is not connected to system ground, 
    # add a net tie option for flexibility
    NetTie(
        name = "NT_DIE_GND",
        P1 = Net("DIE_GND"),
        P2 = GND
    )

# PCB layout recommendations as comments
# pcb:sch C_VCC.C x=54.8800 y=227.6000 rot=0
# pcb:sch LM20CIM7 x=202.2000 y=202.2000 rot=0
# pcb:note "Keep C_VCC within 5mm of LM20 V+ pin for best performance"
# pcb:note "Minimize trace length between LM20 VO and ADC input"
# pcb:note "For accurate temperature sensing, ensure good thermal coupling to measurement surface"
# pcb:note "Mount LM20 away from heat sources for ambient temperature measurement"
# pcb:sch GND.1 x=278.4000 y=380.0000 rot=0
# pcb:sch VCC.1 x=270.7800 y=113.3000 rot=0
# pcb:sch C_OUT.C x=588.2800 y=291.1000 rot=0
# pcb:sch R_OUT.R x=496.8400 y=240.3000 rot=270
# pcb:sch C_BULK.C x=-21.3200 y=214.9000 rot=0
# pcb:sch TP_VCC.TP x=334.2800 y=118.3800 rot=0
# pcb:sch TP_VOUT.TP x=600.9800 y=131.0800 rot=0