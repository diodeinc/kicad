"""MCP9808 - ±0.5°C Maximum Accuracy Digital Temperature Sensor

The MCP9808 is a high-accuracy digital temperature sensor that converts temperatures 
between -40°C and +125°C to a digital word with ±0.25°C/±0.5°C (typical/maximum) 
accuracy from -20°C to +100°C. It features user-programmable registers for temperature 
alerts, selectable measurement resolution, and a 2-wire I²C/SMBus compatible interface. 
The device operates from 2.7V to 5.5V and includes programmable temperature limit 
registers and an open-drain alert output pin.

Author: @Anthropic/claude-4-opus-20250514
Reviewer: Nasheed Ur Rehman
Datasheet: https://ww1.microchip.com/downloads/en/DeviceDoc/25095A.pdf
"""

load("@stdlib/interfaces.zen", "I2c")

# Dependencies
Resistor = Module("@stdlib/generics/Resistor.zen")
Capacitor = Module("@stdlib/generics/Capacitor.zen")

# Types
I2cAddress = enum("0x18", "0x19", "0x1A", "0x1B", "0x1C", "0x1D", "0x1E", "0x1F")
AlertPolarity = enum("ActiveLow", "ActiveHigh")

# Configuration
add_decoupling = config("add_decoupling", bool, default = True)
add_pullups = config("add_pullups", bool, default = True)
enable_alert = config("enable_alert", bool, default = True)
alert_polarity = config("alert_polarity", AlertPolarity, default = "ActiveLow")
i2c_address = config("i2c_address", I2cAddress, default = "0x18")

# External IO
i2c = io("I2C", I2c, default = I2c("I2C"))
VDD = io("VDD", Net, default = Net("VDD", symbol = Symbol("@kicad-symbols/power.kicad_sym:VDD")))
GND = io("GND", Net, default = Net("GND", symbol = Symbol("@kicad-symbols/power.kicad_sym:GND")))
ALERT = io("ALERT", Net, default = Net("ALERT")) if enable_alert else None

# Address configuration nets
_A0 = GND if i2c_address.value[3] == "8" or i2c_address.value[3] == "A" or i2c_address.value[3] == "C" or i2c_address.value[3] == "E" else VDD
_A1 = GND if i2c_address.value[3] in ["8", "9", "C", "D"] else VDD
_A2 = GND if i2c_address.value[2] == "1" else VDD

# ±0.25°C (±0.5°C) Typical (Maximum), Digital Temperature Sensor, DFN-8
Component(
    name = "MCP9808",
    symbol = Symbol(library = "@kicad-symbols/Sensor_Temperature.kicad_sym", name = "MCP9808_DFN"),
    footprint = File("@kicad-footprints/Package_DFN_QFN.pretty/DFN-8-1EP_3x2mm_P0.5mm_EP1.7x1.4mm.kicad_mod"),
    pins = {
        "SDA": i2c.SDA,
        "SCL": i2c.SCL,
        "A0": _A0,
        "A1": _A1,
        "A2": _A2,
        "V_{DD}": VDD,
        "GND": GND,
        "EP/GND": GND,
        "Alert": ALERT if enable_alert else Net("NC_ALERT")
    },
)

# Power Supply Decoupling - Datasheet recommends ceramic capacitor close to VDD pin
if add_decoupling:
    # Primary decoupling capacitor
    Capacitor(name = "C_DEC", value = "100nF", package = "0402", P1 = VDD, P2 = GND)

# I2C Pull-up Resistors - Required for proper I2C operation
if add_pullups:
    # SDA pull-up resistor (typical 4.7k for standard mode)
    Resistor(name = "R_SDA", value = "4.7kohms", package = "0402", P1 = i2c.SDA, P2 = VDD)
    
    # SCL pull-up resistor (typical 4.7k for standard mode)
    Resistor(name = "R_SCL", value = "4.7kohms", package = "0402", P1 = i2c.SCL, P2 = VDD)

# Alert Output Pull-up Resistor - Required for open-drain output
if enable_alert and alert_polarity == AlertPolarity("ActiveLow"):
    Resistor(name = "R_ALERT", value = "10kohms", package = "0402", P1 = ALERT, P2 = VDD)

# pcb:sch MCP9808 x=38.1000 y=-50.8000 rot=0
# pcb:sch C_DEC.C x=368.3000 y=12.7000 rot=0
# pcb:sch R_SDA.R x=-101.6000 y=-101.6000 rot=180
# pcb:sch R_SCL.R x=-139.7000 y=-101.6000 rot=180
# pcb:sch R_ALERT.R x=292.1000 y=-38.1000 rot=180
# pcb:sch GND.1 x=139.7000 y=241.3000 rot=0
# pcb:sch VDD.1 x=139.7000 y=-165.1000 rot=0
